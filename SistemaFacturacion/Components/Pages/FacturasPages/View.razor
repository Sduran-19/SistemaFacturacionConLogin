@page "/ViewFacturas"
@page "/ViewFacturas/facturaId={facturaId:int}"
@rendermode InteractiveServer
@inject NavigationManager navigation
@inject FacturasService facturasService
@inject ProductosService productosService
@inject IJSRuntime JS

<PageTitle>Detalles de la Venta</PageTitle>

<div class="container mt-4">
    <div class="card shadow-lg p-4">
        <div id="pdf-section">

            <div class="col-9">
                <img src="Imagenes/axel.jpg" alt="Factura Electrónica" class="logo-small" />
            </div>

            <hr />

            <div class="d-flex justify-content-between">
                <div>
                    <p> <strong>Fecha: </strong> @factura.FechaCreacion.ToShortDateString()</p>
                    <p> <strong>Cliente:</strong> @factura.NombreCliente</p>
                  
                </div>
            </div>

            <hr />

            @if (factura.FacturaDetalle.Count > 0)
            {
                <table class="table table-striped mt-4">
                    <thead class="thead-dark">
                        <tr>
                            <th>Producto</th>
                            <th>Cantidad</th>
                            <th>Precio de Venta</th>
                            <th>Descuento (%)</th>
                            <th>Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var detalle in factura.FacturaDetalle)
                        {
                            <tr>
                                <td>@ObtenerNombreProducto(detalle.ProductoId)</td>
                                <td>@detalle.Cantidad</td>
                                <td>@detalle.PrecioVenta.ToString("N2")</td>
                                <td>@detalle.Descuento.ToString("N2")</td>
                                <td>@detalle.SubTotal.ToString("N2")</td>
                            </tr>
                        }
                    </tbody>
                </table>

                <div class="row">
                    <div class="col text-start">
                        <p><strong>Total de Productos: </strong>@factura.FacturaDetalle.Count</p>
                    </div>
                </div>

                <div class="row">
                    <div class="col text-end">
                        <h5><strong>Total:</strong> $@factura.FacturaDetalle.Sum(f => f.SubTotal + f.Impuesto).ToString("N2")</h5>
                    </div>
                </div>
            }

            <hr />

            <div class="card-footer">
              
                <p><strong>Factura Validad por 30 dias!</strong></p>
            </div>
        </div>

        <div class="mt-4 d-flex justify-content-end">
            <button type="button" class="btn btn-outline-primary me-2" @onclick="Volver"><i class="bi bi-box-arrow-left"></i> Volver</button>
            <button type="button" class="btn btn-outline-success me-2" @onclick="Print"><i class="bi bi-printer"></i> Imprimir</button>
        </div>

    </div>
</div>

@code {
    [Parameter]
    public int facturaId { get; set; }

    public Ventas factura { get; set; } = new Ventas();
    public List<Productos> productos = new List<Productos>();

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(500);
        productos = await productosService.Listar(e => true);
        factura = await facturasService.Buscar(facturaId);
    }

    public string ObtenerNombreProducto(int id)
    {
        var dato = productos.FirstOrDefault(c => c.ProductoId == id);
        return dato?.Nombre ?? "Producto no encontrado";
    }

    public async Task Print()
    {
        await JS.InvokeVoidAsync("printPage");
    }

    void Volver()
    {
        navigation.NavigateTo("/Ventas");
    }

}
<style>
    .logo-small {
        width: 150px; /* Ajusta el ancho según tus necesidades */
        height: auto; /* Mantiene la proporción del logo */
    }
</style>
